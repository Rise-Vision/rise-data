{
  "bitwise"      : true,  // true: Prohibit bitwise operators (&, |, ^, etc.)
  "immed"        : true,  // true: Require immediate invocations to be wrapped in parens e.g. `(function () { } ());
  "newcap"       : true,  // true: Require capitalization of all constructor functions e.g. `new F()`
  "noarg"        : true,  // true: Prohibit use of `arguments.caller` and `arguments.callee`
  "noempty"      : true,  // true: Prohibit use of empty blocks
  "nonew"        : true,  // true: Prohibit use of constructors for side-effects (without assignment)
  "plusplus"     : false, // true: Prohibit use of `++` & `--`
  "quotmark"     : "double",   // Quotation mark consistency:
                                //   false    : do nothing (default)
                                //   true     : ensure whatever is used is consistent
                                //   "single" : require single quotes
                                //   "double" : require double quotes
  "trailing"     : true,  // true: Prohibit trailing whitespaces
  "maxlen"       : 200,   // {int} Max number of characters per line
  "indent"       : 2,     // {int} Number of spaces to use for indentation
  "latedef"      : "nofunc",  // true: Require variables/functions to be defined before being used
  "curly"        : true,  // true: Require {} for every new block or scope
  "boss"         : false, // true: Tolerate assignments where comparisons would be expected
  "eqnull"       : true,  // true: Tolerate use of `== null`
  "eqeqeq"       : true,  // true: Require triple equals (===) for comparison
  "expr"         : false, // true: Tolerate `ExpressionStatement` as Programs
  "laxbreak"     : false, // true: Tolerate possibly unsafe line breakings
  "loopfunc"     : true,  // true: Tolerate functions being defined in loops
  "sub"          : true,  // true: Tolerate using `[]` notation when it can still be expressed in dot notation
  "undef"        : true,  // true: Require all non-global variables to be declared (prevents global leaks)
  "unused"       : true,  // true: Require all defined variables be used
  "maxparams"    : false, // {int} Max number of formal params allowed per function
  "maxdepth"     : false, // {int} Max depth of nested blocks (within functions)
  "maxstatements": false, // {int} Max number statements per function
  "maxcomplexity": false, // {int} Max cyclomatic complexity per function
  "asi"          : false, // true: Tolerate Automatic Semicolon Insertion (no semicolons)
  "debug"        : false, // true: Allow debugger statements e.g. browser breakpoints.
  "eqnull"       : false, // true: Tolerate use of `== null`
  "esnext"       : false, // true: Allow ES.next (ES6) syntax (ex: `const`)
  "moz"          : false, // true: Allow Mozilla specific syntax (extends and overrides esnext features)
                          // (ex: `for each`, multiple try/catch, function expressionâ€¦)
  "evil"         : false, // true: Tolerate use of `eval` and `new Function()`
  "globalstrict" : false, // true: Allow global "use strict" (also enables 'strict')
  "iterator"     : false, // true: Tolerate using the `__iterator__` property
  "lastsemic"    : false, // true: Tolerate omitting a semicolon for the last statement of a 1-line block
  "laxcomma"     : false, // true: Tolerate comma-first style coding
  "loopfunc"     : false, // true: Tolerate functions being defined in loops
  "multistr"     : false, // true: Tolerate multi-line strings
  "proto"        : false, // true: Tolerate using the `__proto__` property
  "scripturl"    : false, // true: Tolerate script-targeted URLs
  "smarttabs"    : false, // true: Tolerate mixed tabs/spaces when used for alignment
  "shadow"       : false, // true: Allows re-define variables later in code e.g. `var x=1; x=2;`
  "sub"          : false, // true: Tolerate using `[]` notation when it can still be expressed in dot notation
  "supernew"     : false, // true: Tolerate `new function () { ... };` and `new Object;`
  "validthis"    : false, // true: Tolerate using this in a non-constructor function
  "browser"      : true,  // Web Browser (window, document, etc)
  "couch"        : false, // CouchDB
  "devel"        : true,  // Development/debugging (alert, confirm, etc)
  "dojo"         : false, // Dojo Toolkit
  "jquery"       : true,  // jQuery
  "mootools"     : false, // MooTools
  "node"         : false, // Node.js
  "nonstandard"  : true,  // Widely adopted globals (escape, unescape, etc)
  "phantom"      : true,  // PhantomJS
  "prototypejs"  : false, // Prototype and Scriptaculous
  "rhino"        : false, // Rhino
  "worker"       : false, // Web Workers
  "wsh"          : false, // Windows Scripting Host
  "yui"          : false, // Yahoo User Interface

  // Legacy
  "nomen"        : false, // true: Prohibit dangling `_` in variables
  "onevar"       : false, // true: Allow only one `var` statement per function
  "passfail"     : false, // true: Stop on first error
  "white"        : false, // true: Check against strict whitespace and indentation rules

  "globals": {

    "$": false,
    "Stripe": false,
    "Spinner": false,
    /* ------------------- */

    /* auto/injector.js */
    "createInjector": false,

    /* angular.js */
    "angular": false,
    "msie": false,
    "jqLite": false,
    "jQuery": false,
    "slice": false,
    "push": false,
    "toString": false,
    "ngMinErr": false,
    "_angular": false,
    "angularModule": false,
    "nodeName_": false,
    "uid": false,

    "lowercase": false,
    "uppercase": false,
    "manualLowercase": false,
    "manualUppercase": false,
    "nodeName_": false,
    "isArrayLike": false,
    "forEach": false,
    "sortedKeys": false,
    "forEachSorted": false,
    "reverseParams": false,
    "nextUid": false,
    "setHashKey": false,
    "extend": false,
    "int": false,
    "inherit": false,
    "noop": false,
    "identity": false,
    "valueFn": false,
    "isUndefined": false,
    "isDefined": false,
    "isObject": false,
    "isString": false,
    "isNumber": false,
    "isDate": false,
    "isArray": false,
    "isFunction": false,
    "isRegExp": false,
    "isWindow": false,
    "isScope": false,
    "isFile": false,
    "isBlob": false,
    "isBoolean": false,
    "trim": false,
    "isElement": false,
    "makeMap": false,
    "map": false,
    "size": false,
    "includes": false,
    "indexOf": false,
    "arrayRemove": false,
    "isLeafNode": false,
    "copy": false,
    "shallowCopy": false,
    "equals": false,
    "csp": false,
    "concat": false,
    "sliceArgs": false,
    "bind": false,
    "toJsonReplacer": false,
    "toJson": false,
    "fromJson": false,
    "toBoolean": false,
    "startingTag": false,
    "tryDecodeURIComponent": false,
    "parseKeyValue": false,
    "toKeyValue": false,
    "encodeUriSegment": false,
    "encodeUriQuery": false,
    "angularInit": false,
    "bootstrap": false,
    "snake_case": false,
    "bindJQuery": false,
    "assertArg": false,
    "assertArgFn": false,
    "assertNotHasOwnProperty": false,
    "getter": false,
    "getBlockElements": false,

    /* filters.js */
    "getFirstThursdayOfYear": false,

    /* AngularPublic.js */
    "version": false,
    "publishExternalAPI": false,

    /* minerr.js */
    "minErr": false,

    /* loader.js */
    "setupModuleLoader": false,

    /* jqLite.js */
    "BOOLEAN_ATTR": false,
    "jqNextId": false,
    "camelCase": false, // true: Identifiers must be in camelCase
    "jqLitePatchJQueryRemove": false,
    "JQLite": false,
    "jqLiteClone": false,
    "jqLiteDealoc": false,
    "jqLiteOff": false,
    "jqLiteRemoveData": false,
    "jqLiteExpandoStore": false,
    "jqLiteData": false,
    "jqLiteHasClass": false,
    "jqLiteRemoveClass": false,
    "jqLiteAddClass": false,
    "jqLiteAddNodes": false,
    "jqLiteController": false,
    "jqLiteInheritedData": false,
    "getBooleanAttrName": false,
    "createEventHandler": false,
    "JQLitePrototype": false,
    "addEventListenerFn": false,
    "removeEventListenerFn": false,

    /* apis.js */
    "hashKey": false,
    "HashMap": false,

    /* urlUtils.js */
    "urlResolve": false,
    "urlIsSameOrigin": false,

    /* ng/compile.js */
    "directiveNormalize": false,

    /* ng/parse.js */
    "setter": false,

    /* ng/directive/directives.js */
    "ngDirective": false,

    /* ng/directive/input.js */
    "VALID_CLASS": false,
    "INVALID_CLASS": false,
    "PRISTINE_CLASS": false,
    "DIRTY_CLASS": false,

    /* ng/diretctive/form.js */
    "nullFormCtrl": false,

    /* Q */
    "Q": false,

    /* mocha */
    "describe": false,
    "xdescribe": false,
    "beforeEach": false,
    "afterEach": false,
    "it": false,
    "xit": false,
    "inject": false,
    "module": false,
    "expect": false,

    /* fixtures */
    "rvFixtures": false,

    /* RV Globals */
    "shoppingCart": false,
    "showSpin": false,
    "hideSpin": false
  }
}
